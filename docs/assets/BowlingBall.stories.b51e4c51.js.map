{"version":3,"file":"BowlingBall.stories.b51e4c51.js","sources":["../../src/BowlingBall.tsx"],"sourcesContent":["import { createElement, useEffect, useState, forwardRef } from \"react\";\n\nconst roundTo = (n: number, factor: number) => Math.ceil(n / factor) * factor;\nconst roundTo20 = (n: number) => roundTo(n, 20);\nconst randomNumberBetween = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\nconst occasionallyByFactor = (factor: number) =>\n  randomNumberBetween(0, factor) === factor;\n\nexport interface BowlingBallProps {\n  index: number;\n  jump?: boolean;\n  onJump?: (newHeight: number) => void;\n  initiallyRandom?: boolean;\n  rate?: number;\n  defaultHeight?: number;\n  width?: string;\n  minHeight?: number;\n  maxHeight?: number;\n  occasionalityFactor?: number;\n}\nexport const BowlingBall = forwardRef<HTMLDivElement, BowlingBallProps>(\n  (\n    {\n      index,\n      jump = true,\n      initiallyRandom = false,\n      onJump,\n      rate = 2000,\n      defaultHeight = 50,\n      width = \"100px\",\n      minHeight = 30,\n      maxHeight = 120,\n      occasionalityFactor = 3,\n    }: BowlingBallProps,\n    ref\n  ) => {\n    const getRandomHeight = () =>\n      roundTo20(randomNumberBetween(minHeight, maxHeight));\n    const occasionally = () => occasionallyByFactor(occasionalityFactor);\n    const [height, setHeight] = useState(\n      initiallyRandom ? getRandomHeight() : defaultHeight\n    );\n\n    useEffect(() => {\n      const intervalId = setInterval(() => {\n        if (jump && occasionally()) {\n          const newHeight = getRandomHeight();\n          setHeight(newHeight);\n          onJump?.(newHeight);\n        }\n      }, rate);\n      return () => clearInterval(intervalId);\n    }, []);\n\n    return (\n      <div\n        ref={ref}\n        style={{\n          height: `${height}px`,\n          width,\n          backgroundColor: index % 2 === 0 ? \"tan\" : \"lightgreen\",\n          borderRadius: \"50%\",\n          textAlign: \"center\" as const,\n        }}\n      >\n        <strong>{index}</strong>\n        <span>{height}</span>\n      </div>\n    );\n  }\n);\n"],"names":["roundTo","__name","n","factor","roundTo20","randomNumberBetween","min","max","occasionallyByFactor","BowlingBall","forwardRef","index","initiallyRandom","onJump","defaultHeight","width","minHeight","maxHeight","occasionalityFactor","ref","getRandomHeight","occasionally","height","setHeight","useState","useEffect","intervalId","jump","newHeight","rate","_jsxs","_jsx"],"mappings":"wKAEA,MAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,KAAA,KAAAD,EAAAC,CAAA,EAAAA,EAAA,WACAC,EAAAH,EAAAC,GAAAF,EAAAE,EAAA,EAAA,EAAA,aACAG,EAAAJ,EAAA,CAAAK,EAAAC,IAAA,KAAA,MAAA,KAAA,OAAA,GAAAA,EAAAD,EAAA,GAAAA,CAAA,EAAA,uBAEAE,EAAAP,EAAAE,GAAAE,EAAA,EAAAF,CAAA,IAAAA,EAAA,wBAeOM,EAAAC,EAAA,QAAA,WAAA,CAAA,CAEH,MAAAC,EACEA,KAAAA,EAAAA,GACO,gBAAAC,EAAA,GACW,OAAAC,EAClBA,KAAAA,EAAAA,IACO,cAAAC,EAAA,GACS,MAAAC,EAAA,QACR,UAAAC,EAAA,GACI,UAAAC,EAAA,IACA,oBAAAC,EAAA,CAEI,EAAAC,IAAA,CAGlB,MAAAC,EAAAnB,EAAA,IAAAG,EAAAC,EAAAW,EAAAC,CAAA,CAAA,EAAA,mBAEAI,EAAApB,EAAA,IAAAO,EAAAU,CAAA,EAAA,gBACA,CAAAI,EAAAC,CAAA,EAAAC,EAAAA,QAAAA,SAAAZ,EAAAQ,EAAA,EAAAN,CAAA,EAIAW,OAAAA,EAAAA,QAAAA,UAAAA,IAAAA,CACE,MAAAC,EAAA,YAAA,IAAA,CACE,GAAAC,GAAAN,IAAA,CACE,MAAAO,EAAAR,IACAG,EAAAA,CAAAA,EACAV,GAAAA,MAAAA,EAAAA,EAAkB,CACpB,EAAAgB,CAAA,EAEF,MAAA,IAAA,cAAAH,CAAA,CAAqC,EAAA,CAAA,CAAA,EAGvCI,EAAA,MAAA,CACE,IAAAX,EACE,MAAA,CACO,OAAA,GAAAG,MACMA,MAAAA,EACXP,gBAAAA,EAAAA,IAAAA,EAAAA,MAAAA,aAC2C,aAAA,MAC7B,UAAA,QACH,EACb,SAAA,CAAAgB,EAAA,SAAA,CAEA,SAAApB,CAASA,CAAAA,EAAAA,EAAAA,OAAAA,CACT,SAAAW,CAAOA,CAAAA,CAAAA,CAAc,CAAA,CAG3B,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;"}